/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventas;

import baseDeDatos.conexion;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JTable;
import logicas.convertidor;
import logicas.nuevosEstados;
/**
 *
 * @author cesar
 */
public class frmConvertidorA extends javax.swing.JFrame {
    DefaultTableModel modelo;
    /**
     * Creates new form frmConvertidorA
     */
    public frmConvertidorA() {
        initComponents();
        
       String[] titulos = {"idAceptadores", "Nombre"};
       modelo = new DefaultTableModel(null,titulos);
       tblAc.setModel(modelo);
       mostrarDatos();
    }
    public void mostrarDatos(){
        while(modelo.getRowCount()>0){
        modelo.removeRow(0);
        }
        conexion conec = new conexion();
              try {
                  ResultSet resultado = conec.consultar("SELECT * FROM aceptadores");
                  while(resultado.next()){
                  Object[] objAceptador = {resultado.getString("idAceptador"), resultado.getString("NOMBRE")};
                  modelo.addRow(objAceptador);
                  }
        } catch (Exception e) {
            System.out.println("Error :"+ e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAc = new javax.swing.JTable();
        btnConvertir = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblAc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAcMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAc);

        btnConvertir.setText("Convertir");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Id:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        lblNombre.setText("   ");

        lblId.setText("       ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnConvertir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(100, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConvertir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(lblId))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(lblNombre)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblAcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAcMouseClicked
      if(evt.getClickCount() == 1){
      JTable receptor = (JTable)evt.getSource();
      lblId.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),0).toString());
      lblNombre.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),1).toString());
      }        // TODO add your handling code here:
    }//GEN-LAST:event_tblAcMouseClicked

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
    ventanamenu ventana = new ventanamenu();
    ventana.setVisible(true);
    this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
     String auxId = lblId.getText();
     conexion conec = new conexion();
     convertidor[] estadosCon = new convertidor[100];
     ArrayList<nuevosEstados> estadoNuevo = new ArrayList<nuevosEstados>();
     //nuevosEstados[] estadoNuevo = new nuevosEstados[1000];
     int cont = 0;
     int iniciador;
     int flag = 0;
     int cont1 = 0;
     int flagy = 0;
     
     ArrayList<String> estadosSigu = new ArrayList<String>();
     String sentencia = String.format("SELECT * FROM estados WHERE idAceptador == '%s'", auxId);
              try {
                  ResultSet resultado = conec.consultar(sentencia);
                  while(resultado.next()){
                   estadosCon[cont] = new convertidor(resultado.getString("estadoAc"), resultado.getString("estado0"),resultado.getString("estado1"),resultado.getString("esInicial"),resultado.getString("esAceptador"));  
                   cont++;
                  }
        } catch (Exception e) {
            System.out.println("Error en conversor:"+ e);
        }
            System.out.print(cont);
        for(int i = 0; i< cont; i++){
            System.out.println("llegue al for");
            if("1".equals(estadosCon[i].flagInicial())){
            System.out.println("iniciador");
             iniciador = i;
             //estadoNuevo[cont1] = new nuevosEstados();
             estadoNuevo.add(new nuevosEstados());
             //estadoNuevo[cont1].setEstadoAc(estadosCon[i].getEstadoAC());
             estadoNuevo.get(cont1).setEstadoAc(estadosCon[i].getEstadoAC());
             //estadoNuevo[cont1].setEsI("1");
             estadoNuevo.get(cont1).setEsI("1");
             System.out.print(iniciador);
             if(!"".equals(estadosCon[i].ingreando1())){
             estadosSigu.add(estadosCon[i].ingreando1());
             //estadoNuevo[cont1].setEstado1(estadosCon[i].ingreando1());
             estadoNuevo.get(cont1).setEstado1(estadosCon[i].ingreando1());
             }else{/*estadoNuevo[cont1].setEstado1("");*/ }
             if(!"".equals(estadosCon[i].ingreando0())){
             estadosSigu.add(estadosCon[i].ingreando0());
             estadoNuevo[cont1].setEstado0(estadosCon[i].ingreando0());
             }else{estadoNuevo[cont1].setEstado0("");}
             cont1++;
            }
        }
        int auxsito = estadosSigu.size();
        while(flag != 1){
            System.out.println("el contador1 es: "+cont1);
        
        System.out.println("El auxsito es: " + auxsito);
        for(int i = 0; i < auxsito+1; i++){
            if(!"".equals(estadosSigu.get(i))){
                //System.out.println("tamanio: "+estadosSigu.get(i).length());
                if(estadosSigu.get(i).length() > 2){
                   estadoNuevo[cont1] = new nuevosEstados();
                   estadoNuevo[cont1].setEstadoAc(estadosSigu.get(i));
                   ArrayList<String> auxList1 = new ArrayList<String>();
                   ArrayList<String> auxList0 = new ArrayList<String>();
                 for(int j = 0; j < estadosSigu.get(i).length(); j++){
          // System.out.println(estadosSigu.get(i).charAt(j));
           for(int k = 0; k < cont; k++){
               
               if(estadosSigu.get(i).charAt(j) == estadosCon[k].getEstadoAC().charAt(0)){
                   if(estadosCon[k].getFlagCon() != 1){
                        if(!"".equals(estadosCon[k].ingreando1())){
                            
                            auxList1.add(estadosCon[k].ingreando1());
                           }
                        if(!"".equals(estadosCon[k].ingreando0())){
                            auxList0.add(estadosCon[k].ingreando0());
                        }
                   }
               }
           }
           }
            String auxAs = "";
            //para lista de los 1
            for(int j = 0; j < auxList1.size(); j++){
                if(j == 0){
                auxAs = auxList1.get(j);
                
                 }else{
                     auxAs = auxAs +","+auxList1.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
               estadosSigu.add(auxAs);
               estadoNuevo[cont1].setEstado1(auxAs);
               //para 0
            for(int j = 0; j < auxList0.size(); j++){
                if(j == 0){
                auxAs = auxList0.get(j);
                
                 }else{
                     auxAs = auxAs +","+auxList0.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
               estadosSigu.add(auxAs);
               estadoNuevo[cont1].setEstado0(auxAs);
               
               //poneAlnuevoEstado como revisador
               estadoNuevo[cont1].setFlagCheck(1);
               //sube contador 
               cont1++;
                }else{
                   estadoNuevo[cont1] = new nuevosEstados();
                   estadoNuevo[cont1].setEstadoAc(estadosSigu.get(i));
                   ArrayList<String> auxList1 = new ArrayList<String>();
                   ArrayList<String> auxList0 = new ArrayList<String>();
                 for(int j = 0; j < estadosSigu.get(i).length(); j++){
          // System.out.println(estadosSigu.get(i).charAt(j));
           for(int k = 0; k < cont; k++){
               if(estadosSigu.get(i).charAt(j) == estadosCon[k].getEstadoAC().charAt(0)){
                   if(estadosCon[k].getFlagCon() != 1){
                        if(!"".equals(estadosCon[k].ingreando1())){
                            
                            auxList1.add(estadosCon[k].ingreando1());
                           }
                        if(!"".equals(estadosCon[k].ingreando0())){
                            auxList0.add(estadosCon[k].ingreando0());
                        }
                   }
               }
           }
           }
            String auxAs = "";
            //para lista de los 1
            for(int j = 0; j < auxList1.size(); j++){
                if(j == 0){
                auxAs = auxList1.get(j);
                
                 }else{
                     auxAs = auxAs +","+auxList1.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
           //comprobamso que no se a aniadido
             for(int j = 0; j < cont1; j++){
               if(estadoNuevo[j].getEstadoAc().equals(auxAs)){
                   flagy = 1;
                   break;
               }
               }
               if(flagy != 1){
               estadoNuevo[cont1].setEstado0(auxAs);
               estadosSigu.add(auxAs);
               }
               //para 0
            for(int j = 0; j < auxList0.size(); j++){
                if(j == 0){
                auxAs = auxList0.get(j);
                
                 }else{
                     auxAs = auxAs +","+auxList0.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
              // System.out.println("se aniado: "+ auxAs);
               //comprobamos si se aniado
               for(int j = 0; j < cont1; j++){
               if(estadoNuevo[j].getEstadoAc().equals(auxAs)){
                   flagy = 1;
                   break;
               }
               }
               if(flagy != 1){
               estadoNuevo[cont1].setEstado0(auxAs);
               estadosSigu.add(auxAs);
               }
               //poneAlnuevoEstado como revisador
               estadoNuevo[cont1].setFlagCheck(1);
               //sube contador 
               cont1++;
                }
           //System.out.println("cadena:"+estadosSigu.get(i));
            }else{
            //System.out.println("no trae nada");
            }
            System.out.println("tamanio de la lista de estados: "+estadosSigu.size());
            System.out.println("contador1: " + cont1);
            System.out.println("La cadena siguiente es:" + estadosSigu.get(cont1));
        }
        System.out.println("Sali del primer for");
        //comprabamos que ya se acabaron
        int nose = 0;
        for(int p = 0; p < cont1 || nose == 0; p++){
            if(estadoNuevo[p].getFlagCheck() == 0){
            nose = 1;
            System.out.println("nose " + nose);
            }
        }
        if(nose == 0){
        flag = 1;
        }
        System.out.println("flag: "+flag);
        System.out.println("Sigo en el while");
        }
       System.out.println("sali del while");
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConvertirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmConvertidorA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTable tblAc;
    // End of variables declaration//GEN-END:variables
}
