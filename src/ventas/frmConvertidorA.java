/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventas;

import baseDeDatos.conexion;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Locale;
import javax.swing.JTable;
import logicas.convertidor;
import logicas.nuevosEstados;
/**
 *
 * @author cesar
 */
public class frmConvertidorA extends javax.swing.JFrame {
    DefaultTableModel modelo;
    /**
     * Creates new form frmConvertidorA
     */
    public frmConvertidorA() {
        initComponents();
        
       String[] titulos = {"idAceptadores", "Nombre"};
       modelo = new DefaultTableModel(null,titulos);
       tblAc.setModel(modelo);
       mostrarDatos();
    }
    public void mostrarDatos(){
        while(modelo.getRowCount()>0){
        modelo.removeRow(0);
        }
        conexion conec = new conexion();
              try {
                  ResultSet resultado = conec.consultar("SELECT * FROM aceptadores");
                  while(resultado.next()){
                  Object[] objAceptador = {resultado.getString("idAceptador"), resultado.getString("NOMBRE")};
                  modelo.addRow(objAceptador);
                  }
        } catch (Exception e) {
            System.out.println("Error :"+ e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAc = new javax.swing.JTable();
        btnConvertir = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblAc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAcMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAc);

        btnConvertir.setText("Convertir");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Id:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        lblNombre.setText("   ");

        lblId.setText("       ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnConvertir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(100, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConvertir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(lblId))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(lblNombre)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblAcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAcMouseClicked
      if(evt.getClickCount() == 1){
      JTable receptor = (JTable)evt.getSource();
      lblId.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),0).toString());
      lblNombre.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),1).toString());
      }        // TODO add your handling code here:
    }//GEN-LAST:event_tblAcMouseClicked

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
    ventanamenu ventana = new ventanamenu();
    ventana.setVisible(true);
    this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
     String auxId = lblId.getText();
     conexion conec = new conexion();
     convertidor[] estadosCon = new convertidor[100];
     ArrayList<nuevosEstados> estadoNuevo = new ArrayList<nuevosEstados>();
     //nuevosEstados[] estadoNuevo = new nuevosEstados[1000];
     int cont = 0;
     int iniciador;
     int flag = 0;
     int cont1 = 0;
     int flagy = 0;
     
     ArrayList<String> estadosSigu = new ArrayList<String>();
     String sentencia = String.format("SELECT * FROM estados WHERE idAceptador == '%s'", auxId);
              try {
                  ResultSet resultado = conec.consultar(sentencia);
                  while(resultado.next()){
                   estadosCon[cont] = new convertidor(resultado.getString("estadoAc"), resultado.getString("estado0"),resultado.getString("estado1"),resultado.getString("esInicial"),resultado.getString("esAceptador"));  
                   cont++;
                  }
        } catch (Exception e) {
            System.out.println("Error en conversor:"+ e);
        }
            //Busca iniciador------------------------------------------------------------------------
            ArrayList<String> iniList = new ArrayList<String>();
        for(int i = 0; i< cont; i++){
            if("1".equals(estadosCon[i].flagInicial())){
             iniciador = i;
             iniList.add(estadosCon[i].getEstadoAC());

             cont1++;
            }
        }
        String auxSi = "T";
        for(int i = 0; i < iniList.size(); i++){
        if(i == 0){
        auxSi = iniList.get(i);
        }else{
           auxSi = auxSi +iniList.get(i);
        }
        }
        estadoNuevo.add(new nuevosEstados());
        estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(auxSi);
        estadoNuevo.get(estadoNuevo.size() - 1).setEsI("1");
        //estadosSigu.add(auxSi);
        ArrayList<String> auxL0 = new ArrayList<String>();
        ArrayList<String> auxL1 = new ArrayList<String>();
        System.out.println(auxSi + " y " + auxSi.length());
        if(auxSi.length() >= 2){
            for(int i = 0; i < auxSi.length(); i++){
                for(int j = 0; j < cont; j++){
                    if(auxSi.charAt(i) == estadosCon[j].getEstadoAC().charAt(0)){
                    if(!"".equals(estadosCon[j].ingreando0())){
                        auxL0.add(estadosCon[j].ingreando0());
                        }
                        if(!"".equals(estadosCon[j].ingreando1())){
                        auxL1.add(estadosCon[j].ingreando1());
                        }
                    }
                }
            }
            //para 1
            String Aux2 = "T";
            for(int i = 0; i < auxL1.size(); i++){
                if(i == 0){
                    Aux2 = auxL1.get(i);
                }else{Aux2 = Aux2 + auxL1.get(i);}
            }
            char[] ok = Aux2.toCharArray();
            Arrays.sort(ok);
            String acomodada = new String(ok);
            String aux3 = "T";
            for(int i = 0; i < acomodada.length(); i++){
            if("T".equals(aux3) && acomodada.charAt(i) != ','){
            aux3 = String.valueOf(acomodada.charAt(i));
            }else if(acomodada.charAt(i) != ','){
                aux3 = aux3 + String.valueOf(acomodada.charAt(i));
            }
            }
            System.out.println("Para 0 en el inicial: "+aux3);
            if(!"T".equals(aux3)){
            estadoNuevo.get(estadoNuevo.size() - 1).setEstado1(aux3);
            estadosSigu.add(aux3);
            }
            
            
            //para 0
            //String Aux2 = "s";
            for(int i = 0; i < auxL0.size(); i++){
                if(i == 0){
                    Aux2 = auxL0.get(i);
                }else {Aux2 = Aux2 + auxL0.get(i);}
            }
            char[] ok2 = Aux2.toCharArray();
            Arrays.sort(ok2);
            String acomodada2 = new String(ok2);
            String aux32 = "s";
            for(int i = 0; i < acomodada2.length(); i++){
            if("s".equals(aux32) && acomodada2.charAt(i) != ','){
            aux32 = String.valueOf(acomodada2.charAt(i));
            }else if(acomodada2.charAt(i) != ','){
                aux32 = aux32 + String.valueOf(acomodada2.charAt(i));
            }
            }
            System.out.println(aux32);
            if(!"s".equals(aux32)){
            estadoNuevo.get(estadoNuevo.size() - 1).setEstado0(aux32);
            estadosSigu.add(aux32);
            }
        }else{
        for(int i = 0; i < cont; i++){
        if(auxSi.equals(estadosCon[i].getEstadoAC())){
        if(!"".equals(estadosCon[i].ingreando1())){
             estadosSigu.add(estadosCon[i].ingreando1());
              estadoNuevo.get(estadoNuevo.size() - 1).setEstado1(estadosCon[i].ingreando1());
             }
             if(!"".equals(estadosCon[i].ingreando0())){
             estadosSigu.add(estadosCon[i].ingreando0());
             estadoNuevo.get(estadoNuevo.size() - 1).setEstado0(estadosCon[i].ingreando0());
             }
        }
        }
        
        }
        while(flag == 0){
            System.out.println("---estoy en el while----");
            System.out.println("tamanio " + estadosSigu.size());
            //System.out.println("La cadena que se va utilizar al inicio es:"+estadosSigu.get(estadosSigu.size() - 1));
            //System.out.println("el contador1 es: "+cont1);
            int auxsito = estadosSigu.get(estadosSigu.size()-1).length();
        System.out.println("El auxsito es: " + auxsito);
        //for(int i = 0; i < auxsito; i++){
            if(!"".equals(estadosSigu.get(estadosSigu.size() -1))){
                //System.out.println("tamanio: "+estadosSigu.get(i).length());
                if(estadosSigu.get(estadosSigu.size() -1).length() > 2){
                    System.out.println("EL estado " + estadosSigu.get(estadosSigu.size() - 1) + " es mayor");
                   //estadoNuevo[cont1] = new nuevosEstados();
                   //estadoNuevo.add(new nuevosEstados());
                   //estadoNuevo[cont1].setEstadoAc(estadosSigu.get(i));
                   int auxiliar = 0;
                   System.out.println("se va intentar aniadir: "+estadosSigu.get(estadosSigu.size() -1));
                   System.out.println("El tamanio de el estado nuevo es: "+estadoNuevo.size());
                   if(estadoNuevo.size() >= 2){
                       System.out.println("Entre al if de comprobador");
                   for(int io = 0; io < estadoNuevo.size()  && auxiliar == 0; io++){
                       System.out.println("Entre al if de comprobador se esta comprobando: "+estadosSigu.get(estadosSigu.size() -1));
                       System.out.println("Con:  "+estadoNuevo.get(io).getEstadoAc());
                       if(estadoNuevo.get(io).getEstadoAc().equals(estadosSigu.get(estadosSigu.size() -1))){
                       auxiliar = 1;
                       }
                    }
                   if(auxiliar == 0){
                       estadoNuevo.add(new nuevosEstados());
                       
                       System.out.println("ya estoy dentro del if y se va intentar aniadir: "+estadosSigu.get(estadosSigu.size() -1));
                   estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(estadosSigu.size() -1));
                   for(int o = 0; o < cont; o++){
                       if(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc().equals(estadosCon[o].getEstadoAC())){
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsA(estadosCon[o].getEsA());
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsI(estadosCon[o].getEsI());
                       }
                   }
                   }else{
                       System.out.println("Llegue al else por que se encontro que es igual");
                       //int jijija = 0
                       //si ya se utilizo pazamos con alguno que no se haya utilizado
                       int hola = 0;
                      // System.out.println("Estados siguientes : " + estadosSigu.size());
                       //System.out.println("Esadtos nuevos : " + estadoNuevo.size());
                   for(int pa = 0; pa < estadosSigu.size() && auxiliar == 1; pa++){
                       //System.out.println("Llegue al for");
                       hola= 0;
                       for(int pe = 0; pe < estadoNuevo.size() && hola == 0; pe++){
                          // System.out.println("Llegue  al 2do for " + estadosSigu.get(pa));
                          // System.out.println("estado sig " + estadoNuevo.get(pe).getEstadoAc());
                       if(estadosSigu.get(pa).equals(estadoNuevo.get(pe).getEstadoAc())){
                           hola = 1;
                       }
                       }
                       if(hola == 0){
                           auxiliar = 0;
                           if(estadosSigu.get(pa).charAt(0) == 'T'){
                               flag = 1;
                                 estadoNuevo.add(new nuevosEstados());
                                 estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(pa));
                                 estadosSigu.add(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc());
                           }else{
                                 
                                 estadoNuevo.add(new nuevosEstados());
                                 estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(pa));
                                 estadosSigu.add(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc());
                   for(int o = 0; o < cont; o++){
                       if(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc().equals(estadosCon[o].getEstadoAC())){
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsA(estadosCon[o].getEsA());
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsI(estadosCon[o].getEsI());
                       }
                   }
                           }
                       }
                   }
                   System.out.println("Hola " + hola);
                   }
                   }else{
                       System.out.println("pasa directo");
                       estadoNuevo.add(new nuevosEstados());
                       estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(estadosSigu.size() -1));
                       for(int o = 0; o < cont; o++){
                       if(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc().equals(estadosCon[o].getEstadoAC())){
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsA(estadosCon[o].getEsA());
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsI(estadosCon[o].getEsI());
                       }
                   }
                   }
                   ArrayList<String> auxList1 = new ArrayList<String>();
                   ArrayList<String> auxList0 = new ArrayList<String>();
                   int aux8 = 0;
                 for(int j = 0; j < estadosSigu.get(estadosSigu.size() -1).length(); j++){
                 aux8 = 0;    
          // System.out.println(estadosSigu.get(i).charAt(j));
           for(int k = 0; k < cont&& aux8 ==0; k++){
 
               if( estadosSigu.get(estadosSigu.size() -1).charAt(j) == estadosCon[k].getEstadoAC().charAt(0)){
                        if(!"".equals(estadosCon[k].ingreando1())){
                            System.out.println(estadosSigu.get(estadosSigu.size() -1).charAt(j)+" es igual a " + estadosCon[k].getEstadoAC());
                            System.out.println("El estado "+ estadosCon[k].ingreando1());
                            if(estadosCon[k].ingreando1().length() > 1){
                                char aux10 =auxList1.get(auxList1.size() - 1).charAt(0);
                                for(int x = 0; x < estadosCon[k].ingreando1().length(); x++){
                                if(aux10 != estadosCon[k].ingreando1().charAt(x) && estadosCon[k].ingreando1().charAt(x) != ','){
                  
                                    auxList1.add(String.valueOf(estadosCon[k].ingreando1().charAt(x)));
                                }
                                }
                            
                            }else{
                            auxList1.add(estadosCon[k].ingreando1());
                            }
                           }
                        
                        if(!"".equals(estadosCon[k].ingreando0())){
                            auxList0.add(estadosCon[k].ingreando0());
                        }
                   aux8 = 1;
               }

           }
           }
            //System.out.println("Para "+estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc()+" se esta aniadiendo : ");
                //char aux11;

                String axualito2 ="T";
                for(int u = 0; u < auxList1.size(); u++){
                    if(u == 0){
                        if(auxList1.get(u).length() >= 2){
                        for(int v = 0; v <= auxList1.get(u).length(); v++){
                                if(v == 0){
                                    axualito2 = String.valueOf(auxList1.get(u).charAt(v));
                                }else if(auxList1.get(u).charAt(v) != ','){
                                    axualito2 = axualito2 + String.valueOf(auxList1.get(u).charAt(v));
                                }
                            }
                        }else{
                        axualito2 = auxList1.get(u);
                        }
                    }else{
                         if(auxList1.get(u).length() >= 2){
                        for(int v = 0; v <= auxList1.get(u).length(); v++){
                                    if(auxList1.get(u).charAt(v) != ','){
                                    axualito2 = axualito2 + String.valueOf(auxList1.get(u).charAt(v));
                                }
                            }
                        }else{
                             axualito2 = axualito2 + auxList1.get(u);
                         }
                    }
                }
                char[] auCon1 = axualito2.toCharArray();
                Arrays.sort(auCon1);
                System.out.println(auCon1);
                String aux90;
                aux90 = new String(auCon1);
                System.out.println("aux90: "+aux90);
            String auxAs = "T";
            String auxFlg = "T";
            //para lista de los 0
            for(int j = 0; j < aux90.length(); j++){

                if(j == 0){
                    auxAs = String.valueOf(aux90.charAt(0));
                    auxFlg = String.valueOf(aux90.charAt(0));
                 }else{
                    
                    if(aux90.charAt(j) == auxFlg.charAt(0)){
                    } else {
                        auxAs = auxAs + String.valueOf(aux90.charAt(j));
                        auxFlg = String.valueOf(aux90.charAt(j));
                    }
                    System.out.println("auxAs " + auxAs);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
               //System.out.println("aqui ya la cago jejje");
               if(auxAs.charAt(0) == 'T'){}else{
               estadosSigu.add(auxAs);
               }
               estadoNuevo.get(estadoNuevo.size() - 1).setEstado1(auxAs);
               
               //para 0
           /* for(int j = 0; j < auxList0.size(); j++){
                if(j == 0){
                auxAs = auxList0.get(j);
                
                 }else{
                     auxAs = auxAs +auxList0.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }*/
           
            String axualito20 = "T";
                for(int u = 0; u < auxList0.size(); u++){
                     
                    if(u == 0){
                        System.out.println(auxList0.get(u));
                        if(auxList0.get(u).length() >= 2){
                            System.out.println("Llegamos al a que su tamanio es mayor a 2 para: " + auxList0.get(u));
                        for(int v = 0; v < auxList0.get(u).length(); v++){
                                if(v == 0){
                                    System.out.println(auxList0.get(u).charAt(v));
                                    axualito20 = String.valueOf(auxList0.get(u).charAt(v));
                                }else if(auxList0.get(u).charAt(v) != ','){
                                    System.out.println(auxList0.get(u).charAt(v));
                                    axualito20 = axualito20 + String.valueOf(auxList0.get(u).charAt(v));
                                }
                            }
                        }else{
                            if("T".equals(axualito20)){
                        axualito20 = auxList0.get(u);}else{
                            axualito20 = axualito20 + auxList0.get(u);
                            }
                        }
                    }else{
                        System.out.println(auxList0.get(u));
                         if(auxList0.get(u).length() >= 2){
                             System.out.println("Llegamos fuera de la it 0 al a que su tamanio es mayor a 2 para: " + auxList0.get(u));
                        for(int v = 0; v < auxList0.get(u).length(); v++){
                                    if(auxList0.get(u).charAt(v) != ','){
                                    axualito20 = axualito20 + String.valueOf(auxList0.get(u).charAt(v));
                                }
                            }
                        }else{
                             System.out.println(axualito20);
                             axualito20 = axualito20 + auxList0.get(u);
                         }
                    }
                   System.out.println("Vlor de aux: "+ axualito20);
                }
                System.out.println("sali del for");
                char[] auCon0 = axualito20.toCharArray();
                 
                Arrays.sort(auCon0);
                //System.out.println(auCon1);
                String aux0 = new String(auCon0);
                //aux0 = new String(auCon0);
                //System.out.println("::: " + aux0);
                //System.out.println("aux90: "+aux0);
            String auxAs0 = "T";
            String auxFlg0 = "T";
            //para lista de los 0
            for(int j = 0; j < aux0.length(); j++){

                if(j == 0){
                    auxAs0 = String.valueOf(aux0.charAt(0));
                    auxFlg0 = String.valueOf(aux0.charAt(0));
                 }else{
                    
                    if(aux0.charAt(j) == auxFlg0.charAt(0)){
                    } else {
                        auxAs0 = auxAs0 + String.valueOf(aux0.charAt(j));
                        auxFlg0 = String.valueOf(aux0.charAt(j));
                    }
                    //System.out.println("auxAs0 " + auxAs0);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
               //System.out.println("aqui ya la cago jejje");
               //System.out.println(auxAs0);;
               
               //para 0
            /*for(int j = 0; j < auxList0.size(); j++){
                if(j == 0){
                auxAs = auxList0.get(j);
                
                 }else{
                     auxAs = auxAs +auxList0.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }*/
              if(auxAs0.charAt(0) == 'T'){}else{
               estadosSigu.add(auxAs0);
              }
               estadoNuevo.get(estadoNuevo.size() - 1).setEstado0(auxAs0);
               
               //poneAlnuevoEstado como revisador
               estadoNuevo.get(estadoNuevo.size() - 2).setFlagCheck(1);
               //sube contador 
               cont1++;
                }else{
                    System.out.println("El tamanio es de 1");
                   //estadoNuevo[cont1] = new nuevosEstados();
                   
                   //estadoNuevo[cont1].setEstadoAc(estadosSigu.get(i));
                   //estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(i));
                   System.out.println("se va intentar aniadir: "+estadosSigu.get(estadosSigu.size() -1));
                   System.out.println("El tamanio de el estado nuevo es: "+estadoNuevo.size());
                   int auxiliar = 0;
                   if(estadoNuevo.size() > 2){
                   for(int io = 0; io < estadoNuevo.size()  && auxiliar == 0; io++){
                       System.out.println("Entre al if de comprobador se esta comprobando: "+estadosSigu.get(estadosSigu.size() -1));
                       System.out.println("Con:  "+estadoNuevo.get(io).getEstadoAc());
                       if(estadoNuevo.get(io).getEstadoAc().equals(estadosSigu.get(estadosSigu.size() -1))){
                       auxiliar = 1;
                       }
                    }
                   //System.out.println("el axuliar es: "+auxiliar);
                   if(auxiliar == 0){
                       estadoNuevo.add(new nuevosEstados());
                   estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(estadosSigu.size() -1));
                                      for(int o = 0; o < cont; o++){
                       if(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc().equals(estadosCon[o].getEstadoAC())){
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsA(estadosCon[o].getEsA());
                       estadoNuevo.get(estadoNuevo.size() - 1).setEsI(estadosCon[o].getEsI());
                       }
                   }
                   }else{
                       System.out.println("Llegue al else por que se encontro que es igual");
                       //int jijija = 0
                       //si ya se utilizo pazamos con alguno que no se haya utilizado
                       int hola = 0;
                   for(int pa = 0; pa <estadosSigu.size() && auxiliar == 1; pa++){
                       hola = 0;
                       for(int pe = 0; pe < estadoNuevo.size() && hola == 0; pe++){
                       if(estadosSigu.get(pa).equals(estadoNuevo.get(pe).getEstadoAc())){
                           hola = 1;
                           System.out.println(estadosSigu.get(pa)+" es igual: "+estadoNuevo.get(pe).getEstadoAc());
                       }
                       //System.out.println("estamos en la iteracion de pe: "+pe);
                       }
                       if(hola == 0 ){
                         auxiliar = 0;
                           if(estadosSigu.get(pa).charAt(0) == 'T'){
                               flag = 1;
                               estadoNuevo.add(new nuevosEstados());
                                 estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(pa));
                                 estadosSigu.add(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc());
                           }else{
                               
                                 
                                 estadoNuevo.add(new nuevosEstados());
                                 estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(pa));
                                 estadosSigu.add(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc());
                                 for(int o = 0; o < cont; o++){
                                        if(estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc().equals(estadosCon[o].getEstadoAC())){
                                        estadoNuevo.get(estadoNuevo.size() - 1).setEsA(estadosCon[o].getEsA());
                                        estadoNuevo.get(estadoNuevo.size() - 1).setEsI(estadosCon[o].getEsI());
                                    }
                                }
                                 
                           }
                           }
                       //System.out.println("estamos en la iteracion de pa: "+pa);
                   }
                   System.out.println("hola " + hola);
                   if(hola == 1){
                   flag = 1;
                   }
                   System.out.println("Ya sali del for del else");
                   }
                   }else{
                       System.out.println("pasa directo");
                       estadoNuevo.add(new nuevosEstados());
                       estadoNuevo.get(estadoNuevo.size() - 1).setEstadoAc(estadosSigu.get(estadosSigu.size() -1));
                   }
                   ArrayList<String> auxList1 = new ArrayList<String>();
                   ArrayList<String> auxList0 = new ArrayList<String>();
                   int aux8 = 0;
                 for(int j = 0; j < estadosSigu.get(estadosSigu.size() -1).length(); j++){
                 aux8 = 0;    
          // System.out.println(estadosSigu.get(i).charAt(j));
           for(int k = 0; k < cont&& aux8 == 0; k++){
 
               if( estadosSigu.get(estadosSigu.size() -1).charAt(j) == estadosCon[k].getEstadoAC().charAt(0)){
                   System.out.println("a ver: "+estadosSigu.get(estadosSigu.size() -1).charAt(j));
                        if(!"".equals(estadosCon[k].ingreando1())){
                            System.out.println(estadosSigu.get(estadosSigu.size() -1).charAt(j)+" es igual a " + estadosCon[k].getEstadoAC());
                            System.out.println("El estado 1" + estadosCon[k].ingreando1());
                            if(estadosCon[k].ingreando1().length() > 1){
                                char aux10 =auxList1.get(auxList1.size() - 1).charAt(0);
                                for(int x = 0; x < estadosCon[k].ingreando1().length(); x++){
                                if(aux10 != estadosCon[k].ingreando1().charAt(x) && estadosCon[k].ingreando1().charAt(x) != ','){
                  
                                    auxList1.add(String.valueOf(estadosCon[k].ingreando1().charAt(x)));
                                }
                                }
                            
                            }else{
                                if(!"".equals(estadosCon[k].ingreando1())){
                            auxList1.add(estadosCon[k].ingreando1());
                                }
                            }
                           }
                        System.out.println("El estado 0"+estadosCon[k].ingreando0());
                        if(!"".equals(estadosCon[k].ingreando0())){
                            System.out.println("El estado 0"+estadosCon[k].ingreando0());
                            auxList0.add(estadosCon[k].ingreando0());
                        }
                   aux8 = 1;
                   
               }

           }
           }
                System.out.println("Para "+estadoNuevo.get(estadoNuevo.size() - 1).getEstadoAc()+" se esta aniadiendo : ");
                //char aux11;
                int a;
                int b = 0;
                int aux34 = 0;
                int auxili = auxList1.size() - 1;
                //System.out.println("Es tamanio de la lista 1 es: " +auxili);
                for(int je = 0; je < auxList1.size(); je++){
                    a = auxList1.get(je).charAt(0);
                 if(je == 0){
                 b = auxList1.get(je).charAt(0);
                 aux34 = 0;
                 }else if(b > a){
                 auxList1.set(aux34,String.valueOf((char)a));
                 //System.out.println("se aniadio: "+ (char)a);
                 //System.out.println("en " + aux34);
                 //System.out.println("se aniadio: "+auxList1.get(aux34));
                 aux34 = je;
                 }
                 if(je == auxili){
                     //System.out.println("entro al else");
                     auxList1.set(aux34,String.valueOf((char)b));
                     //System.out.println("se aniadio: "+ (char)b);
                     //System.out.println("se aniadio: "+auxList1.get(aux34));
                     
                 }
                //System.out.println("se aniadio"+auxList1.get(je));
                //System.out.println("se aniadio: "+auxList1.get(aux34));
                }
            
            String auxAs = "T";
            //para lista de los 1
            for(int j = 0; j < auxList1.size(); j++){
                if(j == 0){
                auxAs = auxList1.get(j);
                
                 }else{
                    
                     auxAs = auxAs +auxList1.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
               //System.out.println("aqui ya la cago jejje");
               if(auxAs.charAt(0) == 'T'){
              }else{
               estadosSigu.add(auxAs);
               }
               estadoNuevo.get(estadoNuevo.size() - 1).setEstado1(auxAs);
               auxAs = "T";
               //para 0
            for(int j = 0; j < auxList0.size(); j++){
                if(j == 0){
                auxAs = auxList0.get(j);
                
                 }else{
                     auxAs = auxAs+auxList0.get(j);
                 }
                //System.out.println("Se esta guardado: " + auxAs);
            }
               //System.out.println("se aniado: "+ auxAs);
                //System.out.println("aqui ya la cago jejje 2");
               if(auxAs.charAt(0) == 'T'){
               }else{
               estadosSigu.add(auxAs);
               }

               //estadoNuevo[cont1].setEstado0(auxAs);
               estadoNuevo.get(estadoNuevo.size() - 1).setEstado0(auxAs);
               
               //poneAlnuevoEstado como revisador
               estadoNuevo.get(estadoNuevo.size() - 2).setFlagCheck(1);
               cont1++;
                }
           //System.out.println("cadena:"+estadosSigu.get(i));
            }else{
            //System.out.println("no trae nada");
            }
            System.out.println("El estado nuevo es: " + estadoNuevo.get(estadoNuevo.size() - 1 ).getEstadoAc());
            //System.out.println("tamanio de la lista de estados: "+estadosSigu.size());
            //System.out.println("contador1: " + cont1);
            System.out.println("La cadena siguiente es: " + estadosSigu.get(estadosSigu.size()-1));
        //}
        System.out.println("Sali del primer for");
        //comprabamos que ya se acabaron
        int nose = 0;
        for(int p = 0; p < estadoNuevo.size() && nose == 0; p++){
            if(/*estadoNuevo[p].getFlagCheck() == &&0*/ estadoNuevo.get(p).getFlagCheck() == 0){
            nose = 1;
            System.out.println("nose " + nose);
            }
        }
        if(nose == 0){
        flag = 1;
        }
        System.out.println("flag: "+flag);
        
        System.out.println("Tamanio de lista de los estados es: "+ estadoNuevo.size());
        for(int i = 0; i < estadoNuevo.size(); i++){
          
            System.out.println("estados guardados: "+estadoNuevo.get(i).getEstadoAc());
            System.out.println("estado en 0: "+estadoNuevo.get(i).getEstado0());
            System.out.println("estado en 1: "+estadoNuevo.get(i).getEstado1());
            System.out.println("estan ya checados: "+estadoNuevo.get(i).getFlagCheck());
        }
                for(int i = 0; i < estadosSigu.size(); i++){
          
            System.out.println("estados siguientes "+estadosSigu.get(i));
            //System.out.println("estan ya checados: "+estadosSigu.get(i));
        }
        }
       //System.out.println("sali del while");

           for(int i = 0; i < cont; i++){
           if("1".equals(estadosCon[i].getEsA())){
               for(int j = 0; j < estadoNuevo.size(); j++){
                  if(estadoNuevo.get(j).getEstadoAc().length() >= 2){
                      for(int k = 0; k < estadoNuevo.get(j).getEstadoAc().length(); k++){
                          if(estadosCon[i].getEstadoAC().charAt(0) == estadoNuevo.get(j).getEstadoAc().charAt(k)){
                              System.out.println(estadoNuevo.get(j).getEstadoAc() + "es aceptador");
                              estadoNuevo.get(j).setEsA("1");
                          }
                      }
                  }else{
                     if(estadosCon[i].getEstadoAC().charAt(0) == estadoNuevo.get(j).getEstadoAc().charAt(0)){
                          System.out.println(estadoNuevo.get(j).getEstadoAc() + "es aceptador");     
                         estadoNuevo.get(j).setEsA("1");
                          }
                  }
               }
           }
           }
                      for(int j = 0; j < estadoNuevo.size(); j++){
            
            System.out.println("estados guardados: "+estadoNuevo.get(j).getEstadoAc());
            System.out.println("estado en 0: "+estadoNuevo.get(j).getEstado0());
            System.out.println("estado en 1: "+estadoNuevo.get(j).getEstado1());
            System.out.println("estado aceptador: "+estadoNuevo.get(j).getEsA());
            System.out.println("estado inical: "+estadoNuevo.get(j).getEsI());
            System.out.println("estan ya checados: "+estadoNuevo.get(j).getFlagCheck());
            if(!"T".equals(estadoNuevo.get(j).getEstadoAc())){
            sentencia = String.format("INSERT INTO deterministicos(idDeter, estadoAc, estado0, estado1, esInicial, esAceptador, idAceptador) VALUES(null,'%s','%s','%s','%s','%s','%s')",estadoNuevo.get(j).getEstadoAc(),estadoNuevo.get(j).getEstado0() ,estadoNuevo.get(j).getEstado1(),estadoNuevo.get(j).getEsI(),estadoNuevo.get(j).getEsA(),auxId);
            conec.ejecutar(sentencia);
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConvertirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmConvertidorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmConvertidorA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTable tblAc;
    // End of variables declaration//GEN-END:variables
}
